stages:
  - detect_changes
  - build
  - scan
  - approve
  - push

variables:
  TRIVY_IMAGE: "ghcr.io/aquasecurity/trivy:latest"  # Use the official Trivy image
  ARTIFACT_DIR: "trivy-results"  # Directory to store scan results
  BE_IMAGE: $HARBOR_URL/$PROJECT_NAME/backend:$CI_COMMIT_SHORT_SHA
  FE_IMAGE: $HARBOR_URL/$PROJECT_NAME/frontend:$CI_COMMIT_SHORT_SHA


#default:
#  before_script:
#  - echo "$HARBOR_PASSWD" | docker login $HARBOR_URL -u 'robot$'"$HARBOR_USERNAME" --password-stdin 

detect_changed_folders:
  stage: detect_changes
  script:
    - |
      # Get the list of changed files in Application-Code directory
      CHANGED_FILES=$(git diff --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA -- Application-Code/)
      
      # Extract the top-level directories that changed
      CHANGED_DIRS=$(echo "$CHANGED_FILES" | grep "^Application-Code/" | awk -F/ '{print $2}' | sort -u | tr '\n' ' ')
      
      # Output the changed folders
      echo "Changed folders in Application-Code:"
      if [ -z "$CHANGED_DIRS" ]; then
        echo "No changes detected in Application-Code directory"
      else
        echo "$CHANGED_DIRS"
        # Optionally save to a file for use in later stages
      fi
    - echo "CHANGED_DIRS=$CHANGED_DIRS" > changed_dirs.env
  artifacts:
    paths:
      - changed_dirs.env

build-containers:
  stage: build
  script:
    - source changed_dirs.env
    - echo $CHANGED_DIRS
    - for FOLDER in $CHANGED_DIRS; do docker build -t $HARBOR_URL/$PROJECT_NAME/$FOLDER:$CI_COMMIT_SHORT_SHA; done

trivy-image-scan:
  stage: scan
  services:
    - docker:dind
  script:
    - mkdir -p $ARTIFACT_DIR
    - IMAGES=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep ":${CI_COMMIT_SHORT_SHA}$")
    - for IMAGE in $IMAGES; do docker run --rm -v /var/run/docker.sock:/var/run/docker.sock $TRIVY_IMAGE image --severity HIGH,CRITICAL --ignore-unfixed $IMAGE >> $ARTIFACT_DIR/${IMAGE//[\/:]/_}-scan-results.txt; done
  artifacts:
    paths:
      - $ARTIFACT_DIR/*-scan-results.txt      
    # Filesystem scan (code scan)
    #- trivy fs --exit-code 0 --severity HIGH,CRITICAL --no-progress ./Application-Code
    
    # Container image scan
    #- trivy image --exit-code 1 --severity HIGH,CRITICAL --no-progress $DOCKER_IMAGE

review_findings:
  stage: approve
  script:
    - echo "Review scan results and artifacts before pushing to registry"
  when: manual
  allow_failure: false

